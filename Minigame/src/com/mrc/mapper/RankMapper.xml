<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mrc.mapper.RankMapper">
	<!-- 뉴스 표시 -->
	<select id="rankListData" parameterType="int" resultType="RankVO">
		SELECT * 
        FROM(
                  SELECT 
                        R.EMAIL
                        ,R.GAME_NO
                        ,R.TOTAL_SCORE as totalScore
                        ,R.WIN
                        ,R.LOSE
                        ,R.HIGH_SCORE as highScore
                        ,MI.NIC_NAME  as nicName
                        ,GI.GAME_NAME as gameName
                     <!--    ,ROUND((R.WIN/(R.WIN+R.LOSE)*100),2) AS winRate -->
                    FROM RANK R, MEM_INFO MI, GAME_INFO GI
                    WHERE R.EMAIL = MI.EMAIL
                    AND R.GAME_NO = GI.GAME_NO
                    AND R.GAME_NO = #{gameNo}
                    order by highScore DESC 
                    <!-- , winRate DESC -->
        )
      WHERE ROWNUM <![CDATA[ <]]> 6
	</select>
	<update id="insertRank" parameterType="RankVO">
		MERGE INTO rank r
		USING dual
		ON (r.game_no = #{gameNo} AND r.email = #{email})
		WHEN MATCHED THEN update set r.high_score = #{highScore}
		WHEN NOT MATCHED THEN insert ( r.email, r.game_no, r.high_score )
		values ( #{email}, #{gameNo}, #{highScore} )
	</update>
	<!--  Snake 점수 받아오기 -->
	<select id="getCurrentHighScore" parameterType="RankVO" resultType="RankVO">
		SELECT
			HIGH_SCORE as highScore,
			EMAIL as email
		FROM
			RANK
		WHERE
			EMAIL = #{email}
		AND
			GAME_NO = #{gameNo}
	</select>
</mapper> 